Процессы в ОС GNU/Linux
Каждый процесс имеет свой собственный идентификатор. 
Получить значение идентификатора процесса можно при помощи вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификаторы текущего и родительскго процессов:
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>

int main(){
        pid_t prid, parentprid;
        prid = getpid();
        parentprid = getppid();
        printf("ID текущего процесса: %d\nID родительского процесса: %d\n", prid, parentprid);
        return 0;
}


felger@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  12061 pts/2    00:00:00 bash
  13760 pts/2    00:00:00 ps
felger@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
felger@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out
felger@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
ID текущего процесса: 14303
ID родительского процесса: 12061

Родительским процессом для запущенной программы является оболочка bash, поэтому ее ID совпадает с ID, родительского процесса

felger@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  12061 pts/2    00:00:00 bash
  14329 pts/2    00:00:00 ps
felger@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
ID текущего процесса: 14332
ID родительского процесса: 12061

После второго запуска меняется ID текущего процесса, так как предыдущий процесс завершился

